[
  {
    "ContainingType": "CleanArchitecture.API.Controllers.AdminController",
    "Method": "DeleteUser",
    "RelativePath": "api/admin/delete/{userId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.API.Controllers.AdminController",
    "Method": "SearchUsers",
    "RelativePath": "api/admin/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "searchTerm",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.API.Controllers.AdminController",
    "Method": "UpdateUser",
    "RelativePath": "api/admin/update/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "updateUserDto",
        "Type": "CleanArchitecture.UseCases.Dtos.UserDtos.UpdateUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.API.Controllers.AdminController",
    "Method": "GetUserByEmail",
    "RelativePath": "api/admin/user/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.API.Controllers.AdminController",
    "Method": "CreateUser",
    "RelativePath": "api/admin/user/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createUserDto",
        "Type": "CleanArchitecture.UseCases.Dtos.UserDtos.CreateUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.API.Controllers.AdminController",
    "Method": "CreateProfile",
    "RelativePath": "api/admin/user/create-profile",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createUserDto",
        "Type": "CleanArchitecture.UseCases.Dtos.UserDtos.CreateUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.AuthController",
    "Method": "ChangePassword",
    "RelativePath": "api/Auth/change-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "changePasswordDto",
        "Type": "CleanArchitecture.UseCases.Dtos.UserDtos.ChangePasswordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.AuthController",
    "Method": "ForgotPassword",
    "RelativePath": "api/Auth/forgot-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDto",
        "Type": "CleanArchitecture.UseCases.Dtos.UserDtos.UserLoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.AuthController",
    "Method": "Logout",
    "RelativePath": "api/Auth/logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.AuthController",
    "Method": "ResetPassword",
    "RelativePath": "api/Auth/reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "resetPasswordDto",
        "Type": "CleanArchitecture.UseCases.Dtos.UserDtos.ResetPasswordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.BankAccountController",
    "Method": "OpenAccount",
    "RelativePath": "api/BankAccount",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "bankAccountDto",
        "Type": "CleanArchitecture.UseCases.Dtos.BankDtos.BankAccountDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.BankAccountController",
    "Method": "GetAccountByNumber",
    "RelativePath": "api/BankAccount/{accountNumber}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "accountNumber",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.BankAccountController",
    "Method": "GetAccountsByHolderName",
    "RelativePath": "api/BankAccount/holder/{accountHolderName}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "accountHolderName",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.Web.Controllers.BonDeReceptionController",
    "Method": "GetAll",
    "RelativePath": "api/BonDeReception",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.OrderDtos.BonDeReceptionDto.BonDeReceptionDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Web.Controllers.BonDeReceptionController",
    "Method": "GetById",
    "RelativePath": "api/BonDeReception/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.OrderDtos.BonDeReceptionDto.BonDeReceptionDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Web.Controllers.BonDeReceptionController",
    "Method": "Update",
    "RelativePath": "api/BonDeReception/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "CleanArchitecture.UseCases.Dtos.OrderDtos.BonDeReceptionDto.UpdateBonDeReceptionDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.Web.Controllers.BonDeReceptionController",
    "Method": "Archive",
    "RelativePath": "api/BonDeReception/{id}/archive",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.Web.Controllers.BonDeReceptionController",
    "Method": "Confirm",
    "RelativePath": "api/BonDeReception/{id}/confirm",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.Web.Controllers.BonDeReceptionController",
    "Method": "HandleDiscrepancy",
    "RelativePath": "api/BonDeReception/{id}/handle-discrepancy",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "discrepancyAmount",
        "Type": "System.Double",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.Web.Controllers.BonDeReceptionController",
    "Method": "GetArchived",
    "RelativePath": "api/BonDeReception/archived",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.OrderDtos.BonDeReceptionDto.BonDeReceptionDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Web.Controllers.BonDeReceptionController",
    "Method": "CreateFromOrder",
    "RelativePath": "api/BonDeReception/from-order/{orderSupplierId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderSupplierId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ClientsController",
    "Method": "GetClients",
    "RelativePath": "api/Clients",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.ClientDtos.ClientDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ClientsController",
    "Method": "CreateClient",
    "RelativePath": "api/Clients",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "clientDto",
        "Type": "CleanArchitecture.UseCases.Dtos.ClientDtos.CreateClientDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ClientDtos.ClientDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ClientsController",
    "Method": "GetClient",
    "RelativePath": "api/Clients/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ClientDtos.ClientDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ClientsController",
    "Method": "UpdateClient",
    "RelativePath": "api/Clients/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "clientDto",
        "Type": "CleanArchitecture.UseCases.Dtos.ClientDtos.UpdateClientDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ClientDtos.ClientDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ClientsController",
    "Method": "DeleteClient",
    "RelativePath": "api/Clients/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ClientDtos.ClientDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ClientsController",
    "Method": "ArchiveClient",
    "RelativePath": "api/Clients/archive/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ClientDtos.ClientDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ClientsController",
    "Method": "SearchClients",
    "RelativePath": "api/Clients/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "query",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "sortBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ascending",
        "Type": "System.Boolean",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.ClientDtos.ClientDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.DeliveryNoteController",
    "Method": "GetAll",
    "RelativePath": "api/DeliveryNote",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.OrderDtos.DeliveryNoteDto.DeliveryNoteDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.DeliveryNoteController",
    "Method": "GetById",
    "RelativePath": "api/DeliveryNote/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.OrderDtos.DeliveryNoteDto.DeliveryNoteDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.DeliveryNoteController",
    "Method": "UpdateDeliveryNote",
    "RelativePath": "api/DeliveryNote/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "deliveryNoteDto",
        "Type": "CleanArchitecture.UseCases.Dtos.OrderDtos.DeliveryNoteDto.UpdateDeliveryNoteDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.OrderDtos.DeliveryNoteDto.DeliveryNoteDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.DeliveryNoteController",
    "Method": "Delete",
    "RelativePath": "api/DeliveryNote/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.DeliveryNoteController",
    "Method": "GetArchived",
    "RelativePath": "api/DeliveryNote/archived",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.OrderDtos.DeliveryNoteDto.DeliveryNoteDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.DeliveryNoteController",
    "Method": "CreateFromOrder",
    "RelativePath": "api/DeliveryNote/createfromorder/{orderClientId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderClientId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "deliveryDate",
        "Type": "System.DateTime",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.OrderDtos.DeliveryNoteDto.DeliveryNoteDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.DeliveryNoteController",
    "Method": "MarkAsArchived",
    "RelativePath": "api/DeliveryNote/markasarchived/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.DeliveryNoteController",
    "Method": "MarkAsDelivered",
    "RelativePath": "api/DeliveryNote/markasdelivered/{orderClientId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderClientId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.DeliveryNoteController",
    "Method": "DownloadPdf",
    "RelativePath": "api/DeliveryNote/pdf/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.DeliveryNoteController",
    "Method": "Search",
    "RelativePath": "api/DeliveryNote/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderClientId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "deliveryDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.OrderDtos.DeliveryNoteDto.DeliveryNoteDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.EmailController",
    "Method": "SendEmail",
    "RelativePath": "api/Email",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "CleanArchitecture.WebAPI.Controllers.EmailController\u002BSendEmailRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.EmployeeController",
    "Method": "GetEmployees",
    "RelativePath": "api/Employee",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.ProjectDtos.EmployeeDtos.EmployeeDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.EmployeeController",
    "Method": "AssignEmployeeToProject",
    "RelativePath": "api/Employee/{employeeId}/assign/{projectId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "employeeId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "projectId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.EmployeeController",
    "Method": "RemoveEmployeeFromProject",
    "RelativePath": "api/Employee/{employeeId}/remove/{projectId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "employeeId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "projectId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.EmployeeController",
    "Method": "GetEmployee",
    "RelativePath": "api/Employee/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ProjectDtos.EmployeeDtos.EmployeeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.EmployeeController",
    "Method": "GetEmployeeWorkload",
    "RelativePath": "api/Employee/{id}/workload",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ProjectDtos.EmployeeDtos.EmployeeWorkloadDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.EmployeeController",
    "Method": "GetAssignedTasks",
    "RelativePath": "api/Employee/GetAssignedTasks",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "employeeEmail",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.EmployeeController",
    "Method": "GetEmployeesByProjectId",
    "RelativePath": "api/Employee/project/{projectId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "projectId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.ProjectDtos.EmployeeDtos.EmployeeDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.EmployeeController",
    "Method": "UpdateTaskStatus",
    "RelativePath": "api/Employee/UpdateTaskStatus",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateTaskStatusDto",
        "Type": "CleanArchitecture.WebAPI.Controllers.UpdateTaskStatusDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.Web.Controllers.InvoiceClientController",
    "Method": "GetInvoiceById",
    "RelativePath": "api/InvoiceClient/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.Web.Controllers.InvoiceClientController",
    "Method": "UpdateInvoice",
    "RelativePath": "api/InvoiceClient/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "CleanArchitecture.UseCases.Dtos.InvoicesDto.InvoiceClientDtos.UpdateInvoiceClientDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.Web.Controllers.InvoiceClientController",
    "Method": "DeleteInvoice",
    "RelativePath": "api/InvoiceClient/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.Web.Controllers.InvoiceClientController",
    "Method": "ExportInvoicesToCsv",
    "RelativePath": "api/InvoiceClient/export-csv",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "invoices",
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.InvoicesDto.InvoiceClientDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.Web.Controllers.InvoiceClientController",
    "Method": "GenerateInvoice",
    "RelativePath": "api/InvoiceClient/generate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "CleanArchitecture.Web.Controllers.GenerateInvoiceRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "InvoiceSupplierController",
    "Method": "GetInvoiceById",
    "RelativePath": "api/InvoiceSupplier/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "InvoiceSupplierController",
    "Method": "DeleteInvoice",
    "RelativePath": "api/InvoiceSupplier/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "InvoiceSupplierController",
    "Method": "ExportInvoicesToCsv",
    "RelativePath": "api/InvoiceSupplier/export/csv",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "invoices",
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.InvoicesDto.InvoiceSupplierDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "InvoiceSupplierController",
    "Method": "GenerateInvoice",
    "RelativePath": "api/InvoiceSupplier/generate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderSupplierUrl",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "bonDeReceptionUrl",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "InvoiceSupplierController",
    "Method": "SearchInvoices",
    "RelativePath": "api/InvoiceSupplier/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "searchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "startDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "endDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebApi.Controllers.LeaveRequestController",
    "Method": "CreateLeaveRequest",
    "RelativePath": "api/LeaveRequest",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createLeaveRequestDto",
        "Type": "CleanArchitecture.UseCases.Dtos.LeaveRequestDtos.CreateLeaveRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebApi.Controllers.LeaveRequestController",
    "Method": "GetAllLeaveRequests",
    "RelativePath": "api/LeaveRequest",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebApi.Controllers.LeaveRequestController",
    "Method": "GetLeaveRequestById",
    "RelativePath": "api/LeaveRequest/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebApi.Controllers.LeaveRequestController",
    "Method": "UpdateLeaveRequest",
    "RelativePath": "api/LeaveRequest/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "updateLeaveRequestDto",
        "Type": "CleanArchitecture.UseCases.Dtos.LeaveRequestDtos.UpdateLeaveRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebApi.Controllers.LeaveRequestController",
    "Method": "DeleteLeaveRequest",
    "RelativePath": "api/LeaveRequest/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebApi.Controllers.LeaveRequestController",
    "Method": "ApproveLeaveRequest",
    "RelativePath": "api/LeaveRequest/{id}/approve",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "approveLeaveRequestDto",
        "Type": "CleanArchitecture.UseCases.Dtos.LeaveRequestDtos.ApproveLeaveRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebApi.Controllers.LeaveRequestController",
    "Method": "NotifyEmployee",
    "RelativePath": "api/LeaveRequest/{id}/notify",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ManagerController",
    "Method": "AssignTaskToEmployee",
    "RelativePath": "api/Manager/AssignTaskToEmployee",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "assignTaskDto",
        "Type": "AssignTaskDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ManagerController",
    "Method": "GetTasksForDepartment",
    "RelativePath": "api/Manager/GetTasksForDepartment",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "managerEmail",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ManagerController",
    "Method": "GetUsersInDepartment",
    "RelativePath": "api/Manager/GetUsersInDepartment",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "managerEmail",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.OrderClientController",
    "Method": "GetAll",
    "RelativePath": "api/OrderClient",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.OrderDtos.OrderClientDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.OrderClientController",
    "Method": "Create",
    "RelativePath": "api/OrderClient",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createOrderDto",
        "Type": "CleanArchitecture.UseCases.Dtos.OrderDtos.CreateOrderClientDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.OrderDtos.OrderClientDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.OrderClientController",
    "Method": "GetById",
    "RelativePath": "api/OrderClient/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.OrderDtos.OrderClientDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.OrderClientController",
    "Method": "Update",
    "RelativePath": "api/OrderClient/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateOrderDto",
        "Type": "CleanArchitecture.UseCases.Dtos.OrderDtos.UpdateOrderClientDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.OrderClientController",
    "Method": "Delete",
    "RelativePath": "api/OrderClient/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.OrderClientController",
    "Method": "Archive",
    "RelativePath": "api/OrderClient/{id}/archive",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.OrderClientController",
    "Method": "ConfirmOrder",
    "RelativePath": "api/OrderClient/{id}/confirm",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.OrderClientController",
    "Method": "GetOrderTotal",
    "RelativePath": "api/OrderClient/{id}/total",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Double",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.OrderClientController",
    "Method": "ValidateOrder",
    "RelativePath": "api/OrderClient/{id}/validate",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.OrderDtos.OrderClientDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.OrderClientController",
    "Method": "GenerateOrderPdf",
    "RelativePath": "api/OrderClient/{orderId}/pdf",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.OrderClientController",
    "Method": "GetArchivedOrders",
    "RelativePath": "api/OrderClient/archived",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.OrderDtos.OrderClientDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.OrderClientController",
    "Method": "GetOrdersByClientId",
    "RelativePath": "api/OrderClient/client/{clientId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "clientId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.OrderDtos.OrderClientDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.OrderClientController",
    "Method": "GetPendingOrders",
    "RelativePath": "api/OrderClient/pending",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.OrderDtos.OrderClientDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.OrderClientController",
    "Method": "Search",
    "RelativePath": "api/OrderClient/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "keyword",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.OrderDtos.OrderClientDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.OrderSupplierController",
    "Method": "CreateOrderSupplier",
    "RelativePath": "api/OrderSupplier",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "CleanArchitecture.UseCases.Dtos.OrderDtos.OrderSupplier.CreateOrderSupplierDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.OrderDtos.OrderSupplier.OrderSupplierDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.OrderSupplierController",
    "Method": "GetAllOrders",
    "RelativePath": "api/OrderSupplier",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.OrderDtos.OrderSupplier.OrderSupplierDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.OrderSupplierController",
    "Method": "GetOrderById",
    "RelativePath": "api/OrderSupplier/{orderId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.OrderDtos.OrderSupplier.OrderSupplierDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.OrderSupplierController",
    "Method": "ApproveOrder",
    "RelativePath": "api/OrderSupplier/{orderId}/approve",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.OrderDtos.OrderSupplier.OrderSupplierDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.OrderSupplierController",
    "Method": "RejectOrder",
    "RelativePath": "api/OrderSupplier/{orderId}/reject",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.OrderSupplierController",
    "Method": "GenerateOrderPdf",
    "RelativePath": "api/OrderSupplier/pdf",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderIds",
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Byte[]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.OrderSupplierController",
    "Method": "GetOrdersByStatus",
    "RelativePath": "api/OrderSupplier/status/{status}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.OrderDtos.OrderSupplier.OrderSupplierDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.OrderSupplierController",
    "Method": "GetOrdersBySupplier",
    "RelativePath": "api/OrderSupplier/supplier/{supplierId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "supplierId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.OrderDtos.OrderSupplier.OrderSupplierDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ProductController",
    "Method": "GetProducts",
    "RelativePath": "api/Product",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sortBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ascending",
        "Type": "System.Boolean",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.ItemDtos.ProduitDtos.ProductDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ProductController",
    "Method": "CreateProduct",
    "RelativePath": "api/Product",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productDto",
        "Type": "CleanArchitecture.UseCases.Dtos.ItemDtos.ProduitDtos.CreateProductDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ItemDtos.ProduitDtos.ProductDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ProductController",
    "Method": "GetProduct",
    "RelativePath": "api/Product/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ItemDtos.ProduitDtos.ProductDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ProductController",
    "Method": "UpdateProduct",
    "RelativePath": "api/Product/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "productDto",
        "Type": "CleanArchitecture.UseCases.Dtos.ItemDtos.ProduitDtos.UpdateProductDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ItemDtos.ProduitDtos.ProductDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ProductController",
    "Method": "DeleteProduct",
    "RelativePath": "api/Product/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ItemDtos.ProduitDtos.ProductDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ProductController",
    "Method": "ArchiveProduct",
    "RelativePath": "api/Product/archive/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ItemDtos.ProduitDtos.ProductDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ProductController",
    "Method": "GetArchivedProducts",
    "RelativePath": "api/Product/archived",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.ItemDtos.ProduitDtos.ProductDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ProductController",
    "Method": "ExportAllProductsToPdf",
    "RelativePath": "api/Product/export-all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ProductController",
    "Method": "ExportProductToPdf",
    "RelativePath": "api/Product/export/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ProductController",
    "Method": "SearchProducts",
    "RelativePath": "api/Product/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "query",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "sortBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ascending",
        "Type": "System.Boolean",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.ItemDtos.ProduitDtos.ProductDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ProjectController",
    "Method": "CreateProject",
    "RelativePath": "api/Project",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "projectCreateDto",
        "Type": "CleanArchitecture.UseCases.Dtos.ProjectDtos.ProjectCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ProjectDtos.ProjectDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ProjectController",
    "Method": "GetAllProjects",
    "RelativePath": "api/Project",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.ProjectDtos.ProjectDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ProjectController",
    "Method": "GetProjectById",
    "RelativePath": "api/Project/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ProjectDtos.ProjectDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ProjectController",
    "Method": "UpdateProject",
    "RelativePath": "api/Project/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "projectUpdateDto",
        "Type": "CleanArchitecture.UseCases.Dtos.ProjectDtos.ProjectUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ProjectController",
    "Method": "DeleteProject",
    "RelativePath": "api/Project/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ProjectController",
    "Method": "UpdateProjectBudget",
    "RelativePath": "api/Project/{projectId}/budget",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "projectId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "actualCost",
        "Type": "System.Double",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ProjectDtos.ProjectBudgetDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ProjectController",
    "Method": "AssessProjectRisk",
    "RelativePath": "api/Project/{projectId}/risk",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "projectId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "assessment",
        "Type": "CleanArchitecture.UseCases.Dtos.ProjectDtos.RiskAssessmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ProjectDtos.ProjectRiskDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ProjectController",
    "Method": "UpdateProjectTimeline",
    "RelativePath": "api/Project/{projectId}/timeline",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "projectId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "CleanArchitecture.UseCases.Dtos.ProjectDtos.ProjectTimelineUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ProjectDtos.ProjectTimelineDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.ProjectController",
    "Method": "GetProjectsByEmployeeId",
    "RelativePath": "api/Project/employee/{employeeId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "employeeId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.ProjectDtos.ProjectDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.PurchaseController",
    "Method": "GetAllPurchases",
    "RelativePath": "api/Purchase",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.PurchaseDtos.PurchaseDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.PurchaseController",
    "Method": "RegisterPurchase",
    "RelativePath": "api/Purchase",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "invoice",
        "Type": "CleanArchitecture.Entities.Invoices.InvoiceSupplier",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.PurchaseDtos.PurchaseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.PurchaseController",
    "Method": "GetPurchaseById",
    "RelativePath": "api/Purchase/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.PurchaseDtos.PurchaseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.PurchaseController",
    "Method": "UpdatePurchase",
    "RelativePath": "api/Purchase/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatePurchaseDto",
        "Type": "CleanArchitecture.UseCases.Dtos.PurchaseDtos.UpdatePurchaseDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.PurchaseDtos.PurchaseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.PurchaseController",
    "Method": "DeletePurchase",
    "RelativePath": "api/Purchase/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.PurchaseController",
    "Method": "ArchivePurchase",
    "RelativePath": "api/Purchase/archive/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.PurchaseDtos.PurchaseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.PurchaseController",
    "Method": "GetPurchasesByFilters",
    "RelativePath": "api/Purchase/filters",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "startDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "endDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "supplierId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "productName",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.PurchaseDtos.PurchaseDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.PurchaseController",
    "Method": "GetPurchasesHistory",
    "RelativePath": "api/Purchase/history",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.PurchaseDtos.PurchaseDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Api.Controllers.PurchaseController",
    "Method": "SearchPurchases",
    "RelativePath": "api/Purchase/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "query",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "sortBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ascending",
        "Type": "System.Boolean",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.PurchaseDtos.PurchaseDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.RoleController",
    "Method": "GetUserRoles",
    "RelativePath": "api/Role/{userId}/roles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.RoleController",
    "Method": "GetAllRoles",
    "RelativePath": "api/Role/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.RoleController",
    "Method": "AssignRoleToUser",
    "RelativePath": "api/Role/assign-role",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "CleanArchitecture.WebAPI.Controllers.AssignRoleRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.RoleController",
    "Method": "CreateRole",
    "RelativePath": "api/Role/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "CleanArchitecture.WebAPI.Controllers.CreateRoleRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.RoleController",
    "Method": "UpdateRole",
    "RelativePath": "api/Role/update/{roleId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roleId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "CleanArchitecture.WebAPI.Controllers.UpdateRoleRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.RoleController",
    "Method": "GetUsersByRole",
    "RelativePath": "api/Role/users-by-role/{roleName}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roleName",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SaleController",
    "Method": "GetSales",
    "RelativePath": "api/Sale",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.SalesDtos.SaleDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SaleController",
    "Method": "CreateSale",
    "RelativePath": "api/Sale",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createSaleDto",
        "Type": "CleanArchitecture.UseCases.Dtos.SalesDtos.CreateSaleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.SalesDtos.SaleDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SaleController",
    "Method": "GetSale",
    "RelativePath": "api/Sale/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.SalesDtos.SaleDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SaleController",
    "Method": "UpdateSale",
    "RelativePath": "api/Sale/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateSaleDto",
        "Type": "CleanArchitecture.UseCases.Dtos.SalesDtos.UpdateSaleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SaleController",
    "Method": "DeleteSale",
    "RelativePath": "api/Sale/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SaleController",
    "Method": "ArchiveSale",
    "RelativePath": "api/Sale/archive/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.SalesDtos.SaleDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SaleController",
    "Method": "GetSalesByClientId",
    "RelativePath": "api/Sale/client/{clientId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "clientId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.SalesDtos.SaleDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SaleController",
    "Method": "GetSalesByDateRange",
    "RelativePath": "api/Sale/date-range",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "startDate",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "endDate",
        "Type": "System.DateTime",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.SalesDtos.SaleDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SaleController",
    "Method": "ExportSalesToCsv",
    "RelativePath": "api/Sale/export-csv",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SaleController",
    "Method": "GetSalesByFilters",
    "RelativePath": "api/Sale/filter",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "startDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "endDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "clientId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "productName",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.SalesDtos.SaleDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SaleController",
    "Method": "GetSalesHistory",
    "RelativePath": "api/Sale/history",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.SalesDtos.SaleDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SaleController",
    "Method": "GetSalesByOrderClientId",
    "RelativePath": "api/Sale/order/{orderClientId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderClientId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.SalesDtos.SaleDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SaleController",
    "Method": "GetSalesByProductName",
    "RelativePath": "api/Sale/product-name/{productName}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productName",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.SalesDtos.SaleDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SaleController",
    "Method": "SearchSales",
    "RelativePath": "api/Sale/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "query",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "sortBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ascending",
        "Type": "System.Boolean",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.SalesDtos.SaleDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SaleController",
    "Method": "GetSalesByStatus",
    "RelativePath": "api/Sale/status/{status}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.SalesDtos.SaleDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Controllers.ServiceController",
    "Method": "GetAllServices",
    "RelativePath": "api/Service",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.ItemDtos.ServiceDtos.ServiceDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Controllers.ServiceController",
    "Method": "CreateService",
    "RelativePath": "api/Service",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createServiceDto",
        "Type": "CleanArchitecture.UseCases.Dtos.ItemDtos.ServiceDtos.CreateServiceDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ItemDtos.ServiceDtos.ServiceDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Controllers.ServiceController",
    "Method": "GetServiceById",
    "RelativePath": "api/Service/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ItemDtos.ServiceDtos.ServiceDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Controllers.ServiceController",
    "Method": "UpdateService",
    "RelativePath": "api/Service/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "serviceDto",
        "Type": "CleanArchitecture.UseCases.Dtos.ItemDtos.ServiceDtos.UpdateServiceDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.Controllers.ServiceController",
    "Method": "DeleteService",
    "RelativePath": "api/Service/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.Controllers.ServiceController",
    "Method": "ArchiveService",
    "RelativePath": "api/Service/archive/{id}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ItemDtos.ServiceDtos.ServiceDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.Controllers.ServiceController",
    "Method": "SearchServices",
    "RelativePath": "api/Service/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "searchTerm",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.ItemDtos.ServiceDtos.ServiceDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SuppliersController",
    "Method": "GetSuppliers",
    "RelativePath": "api/Suppliers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.SupplierDtos.SupplierDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SuppliersController",
    "Method": "CreateSupplier",
    "RelativePath": "api/Suppliers",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "supplierDto",
        "Type": "CleanArchitecture.UseCases.Dtos.SupplierDtos.CreateSupplierDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.SupplierDtos.SupplierDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SuppliersController",
    "Method": "GetSupplier",
    "RelativePath": "api/Suppliers/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.SupplierDtos.SupplierDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SuppliersController",
    "Method": "UpdateSupplier",
    "RelativePath": "api/Suppliers/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "supplierDto",
        "Type": "CleanArchitecture.UseCases.Dtos.SupplierDtos.UpdateSupplierDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SuppliersController",
    "Method": "DeleteSupplier",
    "RelativePath": "api/Suppliers/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.SupplierDtos.SupplierDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SuppliersController",
    "Method": "ArchiveSupplier",
    "RelativePath": "api/Suppliers/archive/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedBy",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.SupplierDtos.SupplierDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SuppliersController",
    "Method": "ExportSuppliersToPdf",
    "RelativePath": "api/Suppliers/export",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.SuppliersController",
    "Method": "SearchSuppliers",
    "RelativePath": "api/Suppliers/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "query",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.SupplierDtos.SupplierDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.TaskController",
    "Method": "CreateTask",
    "RelativePath": "api/Task",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "taskCreateDto",
        "Type": "CleanArchitecture.UseCases.Dtos.ProjectDtos.TaskDtos.TaskCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ProjectDtos.TaskDtos.TaskDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.TaskController",
    "Method": "GetAllTasks",
    "RelativePath": "api/Task",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CleanArchitecture.UseCases.Dtos.ProjectDtos.TaskDtos.TaskDto, CleanArchitecture.UseCases, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.TaskController",
    "Method": "GetTaskById",
    "RelativePath": "api/Task/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CleanArchitecture.UseCases.Dtos.ProjectDtos.TaskDtos.TaskDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.TaskController",
    "Method": "UpdateTask",
    "RelativePath": "api/Task/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "taskUpdateDto",
        "Type": "CleanArchitecture.UseCases.Dtos.ProjectDtos.TaskDtos.TaskUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.TaskController",
    "Method": "DeleteTask",
    "RelativePath": "api/Task/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.TaskController",
    "Method": "AssignTaskToEmployee",
    "RelativePath": "api/Task/{taskId}/assign/{employeeId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "taskId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "employeeId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.TaskController",
    "Method": "CompleteTask",
    "RelativePath": "api/Task/{taskId}/complete",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "taskId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.UserProfileController",
    "Method": "CreateProfile",
    "RelativePath": "api/UserProfile",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "profileDto",
        "Type": "CleanArchitecture.UseCases.Dtos.UserProfileDtos.UserProfileDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.UserProfileController",
    "Method": "GetProfileById",
    "RelativePath": "api/UserProfile/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.UserProfileController",
    "Method": "UpdateProfile",
    "RelativePath": "api/UserProfile/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "profileDto",
        "Type": "CleanArchitecture.UseCases.Dtos.UserProfileDtos.UserProfileDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.UserProfileController",
    "Method": "DeleteProfile",
    "RelativePath": "api/UserProfile/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CleanArchitecture.WebAPI.Controllers.UserProfileController",
    "Method": "GetProfileByUserId",
    "RelativePath": "api/UserProfile/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]